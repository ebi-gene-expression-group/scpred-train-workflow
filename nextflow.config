profiles {

    standard {
        process.executor = 'local'
	conda.cacheDir = "$WORKFLOW_ROOT/cached_envs"
        conda.createTimeout = "30 min"
    }

    cluster{

	process.executor='lsf'
        process.queue='production-rh74'
        process.clusterOptions = '-R \"select[hname!=\'hx-noah-05-02\']\"'
        
        executor.queueSize=1000
        executor.perJobMemLimit=true
        executor.exitReadTimeout='100000 sec'
        executor.pollInterval = '5sec'

        conda.cacheDir = "$WORKFLOW_ROOT/cached_envs" 
        conda.createTimeout = "30 min"
        submitRateLimit = '1 / 15 s'

    } 
}

params{
    results_dir = "${baseDir}/outputs" // specify output when in nested workflow
    method="prediction" //must be 'evaluation' or 'prediction'
    training_dataset_id = "foo"
    exclusions = ""
    //training_10x_dir = "$baseDir/data/E-GEOD-36552_NORMALISED_TPM/10x_data"
    //metadata_file = "$baseDir/data/E-GEOD-36552_NORMALISED_TPM/sdrf.txt"
    training_10x_dir = "$baseDir/data/test_10X_data"
    metadata_file = "$baseDir/data/test_metadata.txt"

    eigenvalue_plot_path = 'eigenvalue_plot.png'
    train_probs_plot_path = 'train_probs.png'
    normalised_counts_slot = 'counts'
    cell_id_col_name = "Comment.ENA_RUN."
    cell_types_col_name = "Characteristics.cell.type."
    col_names = "TRUE"
    log_transform = "TRUE"
    //trained_model = "scpred_trained_model.rds"
    model = 'svmRadial' 
    get_scpred = "TRUE"
    allow_parallel = "TRUE"
    num_cores = 4
    vars_to_regress="nCount_RNA"
}

env { 
    WORKFLOW_ROOT="$WORKFLOW_ROOT" 
}
